version: "3"

services:
  web:
    restart: unless-stopped
    container_name: "host"
    build:
      context: .
      dockerfile: dockerfile.local
    ports:
      - "8000:8000"
    volumes:
      - ./photoapp:/app
    depends_on:
      - db
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DEBUG=${DEBUG}
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis_db
    networks:
      - django_network

  celery:
    restart: unless-stopped
    container_name: "celery"
    build:
      context: .
      dockerfile: dockerfile_celery
    ports:
      - "8001:8001"
    volumes:
      - ./photoapp:/app
    depends_on:
      - db
      - redis_db
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DEBUG=${DEBUG}
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis_db
    networks:
      - django_network

  db:
    restart: unless-stopped
    image: postgres:16
    container_name: "db"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - django_network

  redis_db:
    restart: unless-stopped
    image: "redis:latest"
    container_name: "redis_django"
    ports:
      - "6379:6379"
    networks:
      - django_network

networks:
  django_network:
    driver: bridge

volumes:
  postgres_data:
